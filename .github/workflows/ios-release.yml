name: iOS Release

on:
  push:
    branches:
      - feat/gitHubAction2

jobs:
  build-and-deploy:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Select Xcode 16
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2.0'

    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile with specific name
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        PROFILE_UUID=$(/usr/libexec/PlistBuddy -c "Print UUID" /dev/stdin <<< $(security cms -D -i $PP_PATH))
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles/$PROFILE_UUID.mobileprovision
        
        # Verify provisioning profile installation
        echo "Installed Profile UUID: $PROFILE_UUID"
        ls -la ~/Library/MobileDevice/Provisioning\ Profiles/

        # Get the certificate identity
        CERT_IDENTITY=$(security find-identity -v -p codesigning $KEYCHAIN_PATH | head -n 1 | awk '{print $2}')
        echo "CERT_IDENTITY=$CERT_IDENTITY" >> $GITHUB_ENV
        echo "PROFILE_UUID=$PROFILE_UUID" >> $GITHUB_ENV

#    - name: Build and Test
#      run: |
#        xcodebuild clean build test \
#          -project FlipCam/FlipCam.xcodeproj \
#          -scheme FlipCam \
#          -destination 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=18.2' \
#          CODE_SIGN_IDENTITY="" \
#          CODE_SIGNING_REQUIRED=NO
          
    - name: Build and Archive
      run: |
        xcodebuild clean archive \
          -project FlipCam/FlipCam.xcodeproj \
          -scheme FlipCam \
          -configuration Release \
          -archivePath ./build/FlipCam.xcarchive \
          CODE_SIGN_IDENTITY="$CERT_IDENTITY" \
          CODE_SIGNING_REQUIRED=YES \
          PROVISIONING_PROFILE="$PROFILE_UUID" \
          DEVELOPMENT_TEAM="XN354JRCK2"
          
    - name: Export IPA
      run: |
        # Verify provisioning profile is still available
        ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
        
        # Print the contents of exportOptions.plist for verification
        cat ./exportOptions.plist
        
        xcodebuild -exportArchive \
          -archivePath ./build/FlipCam.xcarchive \
          -exportOptionsPlist ./exportOptions.plist \
          -exportPath ./build \
          -allowProvisioningUpdates
          
    - name: Upload to App Store Connect
      uses: apple-actions/upload-testflight-build@v1
      with:
        app-path: "./build/FlipCam.ipa"
        issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        api-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
        api-private-key: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }} 
